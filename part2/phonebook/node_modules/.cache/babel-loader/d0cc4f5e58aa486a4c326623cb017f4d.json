{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hites\\\\OneDrive\\\\Desktop\\\\Full_Stack_Open\\\\part2\\\\phonebook\\\\src\\\\components\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport personService from \"../services/persons\";\n\nconst Notification = ({\n  notify\n}) => {\n  if (notify === null) {\n    return null;\n  }\n\n  const {\n    message,\n    className\n  } = notify;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 10\n    }\n  }, message);\n};\n\nconst Persons = ({\n  filterPersons,\n  handleDelete\n}) => {\n  return filterPersons.map(person => /*#__PURE__*/React.createElement(\"p\", {\n    key: person.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, person.name, \" \", person.number, \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDelete(person.id, person.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"delete\")));\n};\n\nconst PersonForm = ({\n  setPersons,\n  persons,\n  setMessage\n}) => {\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n\n  const handleNameChange = event => setNewName(event.target.value);\n\n  const handleNumberChange = event => setNewNumber(event.target.value);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newPhonebook = {\n      name: newName,\n      number: newNumber\n    };\n    const existingPerson = persons.find(person => person.name === newName);\n\n    if (existingPerson !== undefined) {\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        personService.putPerson(newPhonebook, existingPerson.id).then(returnedPerson => {\n          setPersons(persons.map(person => person.id === returnedPerson.id ? returnedPerson : person));\n          setMessage({\n            message: `Updated ${returnedPerson.name}`,\n            className: \"success\"\n          });\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        }).catch(error => {\n          setMessage({\n            message: error.response.data.error,\n            className: \"error\"\n          });\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        });\n      }\n    } else {\n      personService.postPerson(newPhonebook).then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson));\n        setMessage({\n          message: `Added ${returnedPerson.name}`,\n          className: \"success\"\n        });\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      }).catch(error => {\n        setMessage({\n          message: error.response.data.error,\n          className: \"error\"\n        });\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      });\n    }\n\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, \"name: \", /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleNameChange,\n    value: newName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, \"number: \", /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleNumberChange,\n    value: newNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"add\")));\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [filterPersons, setFilterPersons] = useState(persons);\n  const [message, setMessage] = useState(null);\n\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n    setFilterPersons(persons.filter(person => person.name.toLowerCase().indexOf(event.target.value.toLowerCase()) !== -1));\n  };\n\n  const handleDelete = (id, name) => {\n    if (window.confirm(`Delete ${name}`)) {\n      personService.deletePerson(id).then(() => {\n        personService.getPersons().then(persons => {\n          setPersons(persons);\n        });\n      }).catch(error => {\n        setMessage({\n          message: `Information of ${name} has already been removed from server`,\n          className: \"error\"\n        });\n        setTimeout(() => {\n          setMessage(null);\n        }, 5000);\n      });\n    }\n  };\n\n  useEffect(() => {\n    personService.getPersons().then(persons => {\n      setPersons(persons);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, \"Phonebook\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, \"filter shown with\", \" \", /*#__PURE__*/React.createElement(\"input\", {\n    onChange: handleFilterChange,\n    value: filter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Notification, {\n    notify: message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, \"add a new\"), /*#__PURE__*/React.createElement(PersonForm, {\n    setPersons: setPersons,\n    setMessage: setMessage,\n    persons: persons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, \"Numbers\"), filter === \"\" ? /*#__PURE__*/React.createElement(Persons, {\n    handleDelete: handleDelete,\n    filterPersons: persons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(Persons, {\n    handleDelete: handleDelete,\n    filterPersons: filterPersons,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["C:/Users/hites/OneDrive/Desktop/Full_Stack_Open/part2/phonebook/src/components/App.js"],"names":["React","useState","useEffect","personService","Notification","notify","message","className","Persons","filterPersons","handleDelete","map","person","id","name","number","PersonForm","setPersons","persons","setMessage","newName","setNewName","newNumber","setNewNumber","handleNameChange","event","target","value","handleNumberChange","handleSubmit","preventDefault","newPhonebook","existingPerson","find","undefined","window","confirm","putPerson","then","returnedPerson","setTimeout","catch","error","response","data","postPerson","concat","App","filter","setFilter","setFilterPersons","handleFilterChange","toLowerCase","indexOf","deletePerson","getPersons"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport personService from \"../services/persons\";\n\nconst Notification = ({ notify }) => {\n  if (notify === null) {\n    return null;\n  }\n  const { message, className } = notify;\n  return <div className={className}>{message}</div>;\n};\n\nconst Persons = ({ filterPersons, handleDelete }) => {\n  return filterPersons.map((person) => (\n    <p key={person.id}>\n      {person.name} {person.number}{\" \"}\n      <button onClick={() => handleDelete(person.id, person.name)}>\n        delete\n      </button>\n    </p>\n  ));\n};\n\nconst PersonForm = ({ setPersons, persons, setMessage }) => {\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n\n  const handleNameChange = (event) => setNewName(event.target.value);\n  const handleNumberChange = (event) => setNewNumber(event.target.value);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    const newPhonebook = {\n      name: newName,\n      number: newNumber,\n    };\n    const existingPerson = persons.find((person) => person.name === newName);\n\n    if (existingPerson !== undefined) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        personService\n          .putPerson(newPhonebook, existingPerson.id)\n          .then((returnedPerson) => {\n            setPersons(\n              persons.map((person) =>\n                person.id === returnedPerson.id ? returnedPerson : person\n              )\n            );\n            setMessage({\n              message: `Updated ${returnedPerson.name}`,\n              className: \"success\",\n            });\n            setTimeout(() => {\n              setMessage(null);\n            }, 5000);\n          })\n          .catch((error) => {\n            setMessage({\n              message: error.response.data.error,\n              className: \"error\",\n            });\n            setTimeout(() => {\n              setMessage(null);\n            }, 5000);\n          });\n      }\n    } else {\n      personService\n        .postPerson(newPhonebook)\n        .then((returnedPerson) => {\n          setPersons(persons.concat(returnedPerson));\n          setMessage({\n            message: `Added ${returnedPerson.name}`,\n            className: \"success\",\n          });\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        })\n        .catch((error) => {\n          setMessage({\n            message: error.response.data.error,\n            className: \"error\",\n          });\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        });\n    }\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        name: <input onChange={handleNameChange} value={newName} />\n      </div>\n      <div>\n        number: <input onChange={handleNumberChange} value={newNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n  const [filterPersons, setFilterPersons] = useState(persons);\n  const [message, setMessage] = useState(null);\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value);\n    setFilterPersons(\n      persons.filter(\n        (person) =>\n          person.name\n            .toLowerCase()\n            .indexOf(event.target.value.toLowerCase()) !== -1\n      )\n    );\n  };\n\n  const handleDelete = (id, name) => {\n    if (window.confirm(`Delete ${name}`)) {\n      personService\n        .deletePerson(id)\n        .then(() => {\n          personService.getPersons().then((persons) => {\n            setPersons(persons);\n          });\n        })\n        .catch((error) => {\n          setMessage({\n            message: `Information of ${name} has already been removed from server`,\n            className: \"error\",\n          });\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  useEffect(() => {\n    personService.getPersons().then((persons) => {\n      setPersons(persons);\n    });\n  }, []);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <div>\n        filter shown with{\" \"}\n        <input onChange={handleFilterChange} value={filter}></input>\n      </div>\n      <Notification notify={message} />\n      <h2>add a new</h2>\n      <PersonForm\n        setPersons={setPersons}\n        setMessage={setMessage}\n        persons={persons}\n      />\n      <h2>Numbers</h2>\n      {filter === \"\" ? (\n        <Persons handleDelete={handleDelete} filterPersons={persons} />\n      ) : (\n        <Persons handleDelete={handleDelete} filterPersons={filterPersons} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}